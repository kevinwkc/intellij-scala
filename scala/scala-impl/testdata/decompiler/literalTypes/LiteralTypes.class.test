class LiteralTypes() extends scala.AnyRef {
  val a : 1 = { /* compiled code */ }
  val b : 1L = { /* compiled code */ }
  val c : 1.0 = { /* compiled code */ }
  val d : 1.0f = { /* compiled code */ }
  val e : true = { /* compiled code */ }
  val f : 'c' = { /* compiled code */ }
  val g : "foo" = { /* compiled code */ }
  val h : 'foo = { /* compiled code */ }
  val aNeg : -1 = { /* compiled code */ }
  val bNeg : -1L = { /* compiled code */ }
  val cNeg : -1.0 = { /* compiled code */ }
  val dNeg : -1.0f = { /* compiled code */ }
  type multiline = "aa\naa\"\""
  type a = 1
  type b = 1L
  type c = 1.0
  type d = 1.0f
  type e = true
  type f = 'c'
  type g = "foo"
  type h = 'foo
  type aNeg = -1
  type bNeg = -1L
  type cNeg = -1.0
  type dNeg = -1.0f
}
